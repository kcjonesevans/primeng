{"version":3,"sources":["/Users/kcjones-evans/work/primeng/src/app/components/selectbutton/selectbutton.ts","/Users/kcjones-evans/work/primeng/src/app/showcase/components/selectbutton/selectbuttondemo-routing.module.ts","/Users/kcjones-evans/work/primeng/src/app/showcase/components/selectbutton/selectbuttondemo.html","/Users/kcjones-evans/work/primeng/src/app/showcase/components/selectbutton/selectbuttondemo.module.ts","/Users/kcjones-evans/work/primeng/src/app/showcase/components/selectbutton/selectbuttondemo.ts"],"names":[],"mappings":"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","file":"selectbuttondemo.module.chunk.js","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectItem} from '../common/selectitem';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SELECTBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-selectButton',\n    template: `\n        <div [ngClass]=\"'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-' + options.length\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div *ngFor=\"let option of options; let i = index\" class=\"ui-button ui-widget ui-state-default ui-button-text-only {{option.styleClass}}\"\n                [ngClass]=\"{'ui-state-active':isSelected(option), 'ui-state-disabled':disabled, 'ui-state-focus': cbox == focusedItem}\" (click)=\"onItemClick($event,option,cbox,i)\">\n                <span class=\"ui-button-text ui-clickable\">{{option.label}}</span>\n                <div class=\"ui-helper-hidden-accessible\">\n                    <input #cbox type=\"checkbox\" [checked]=\"isSelected(option)\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [attr.tabindex]=\"tabindex\" [attr.disabled]=\"disabled\">\n                </div>\n            </div>\n        </div>\n    `,\n    providers: [SELECTBUTTON_VALUE_ACCESSOR]\n})\nexport class SelectButton implements ControlValueAccessor {\n\n    @Input() options: SelectItem[];\n\n    @Input() tabindex: number;\n\n    @Input() multiple: boolean;\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n\n    @Input() disabled: boolean;\n    \n    @Output() onOptionClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    value: any;\n    \n    focusedItem: HTMLInputElement;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    writeValue(value: any) : void {\n        this.value = value;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    onItemClick(event, option: SelectItem, checkbox: HTMLInputElement, index: number) {\n        if(this.disabled) {\n            return;\n        }\n        \n        checkbox.focus();\n        \n        if(this.multiple) {\n            let itemIndex = this.findItemIndex(option);\n            if(itemIndex != -1)\n                this.value = this.value.filter((val,i) => i!=itemIndex);\n            else\n                this.value = [...this.value||[], option.value];\n        }\n        else {\n            this.value = option.value;\n        }\n        \n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n        \n        this.onModelChange(this.value);\n        \n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n    \n    onFocus(event: Event) {\n        this.focusedItem = <HTMLInputElement>event.target;\n    }\n    \n    onBlur(event) {\n        this.focusedItem = null;\n        this.onModelTouched();\n    }\n    \n    isSelected(option: SelectItem) {\n        if(this.multiple)\n            return this.findItemIndex(option) != -1;\n        else\n            return option.value == this.value;\n    }\n    \n    findItemIndex(option: SelectItem) {\n        let index = -1;\n        if(this.value) {\n            for(let i = 0; i < this.value.length; i++) {\n                if(this.value[i] == option.value) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [SelectButton],\n    declarations: [SelectButton]\n})\nexport class SelectButtonModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/components/selectbutton/selectbutton.ts","import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {SelectButtonDemo} from './selectbuttondemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: SelectButtonDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class SelectButtonDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/selectbutton/selectbuttondemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">SelectButton</span>\\n        <span>SelectButton is used to choose single or multiple items from a list using buttons.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Single</h3>\\n    <p-selectButton [options]=\\\"types\\\" [(ngModel)]=\\\"selectedType\\\"></p-selectButton>\\n\\n    <p>Selected Type: {{selectedType}}</p>\\n\\n    <h3>Multiple</h3>\\n    <p-selectButton [options]=\\\"types\\\" [(ngModel)]=\\\"selectedTypes\\\" multiple=\\\"multiple\\\"></p-selectButton>\\n    <p>Selected Types: <span *ngFor=\\\"let type of selectedTypes\\\">{{type}} </span></p>\\n\\n    <hr />\\n\\n    <button type=\\\"button\\\" (click)=\\\"clear()\\\" pButton icon=\\\"fa-close\\\" label=\\\"Clear\\\"></button>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;SelectButtonModule&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>Two-way value binding is defined using ngModel and selectbutton requires a collection of options \\n                where each option should follow the SelectItem interface that defines label-value properties.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-selectButton [options]=\\\"cities\\\" [(ngModel)]=\\\"selectedCity\\\"&gt;&lt;/p-selectButton&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;SelectItem&#125; from 'primeng/primeng';\\n\\nexport class MyModel &#123;\\n\\n    cities: SelectItem[];\\n\\n    selectedCity: string;\\n\\n    constructor() &#123;\\n        this.cities = [];\\n        this.cities.push(&#123;label:'New York', value:'New York'&#125;);\\n        this.cities.push(&#123;label:'Rome', value:'Rome'&#125;);\\n        this.cities.push(&#123;label:'London', value:'London'&#125;);\\n        this.cities.push(&#123;label:'Istanbul', value:'Istanbul'&#125;);\\n        this.cities.push(&#123;label:'Paris', value:'Paris'&#125;);\\n    &#125;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Multiple</h3>\\n            <p>SelectButton allows selecting only one item by default and setting multiple option enables choosing more than one item. \\n                In multiple case, model property should be an array instance that is not null or undefined.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-selectButton [options]=\\\"cities\\\" [(ngModel)]=\\\"selectedCities\\\"&gt;&lt;/p-selectButton&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;SelectItem&#125; from 'primeng/primeng';\\n\\nexport class MyModel &#123;\\n\\n    cities: SelectItem[];\\n\\n    selectedCities: string[] = [];\\n\\n    constructor() &#123;\\n        this.cities = [];\\n        this.cities.push(&#123;label:'New York', value:'New York'&#125;);\\n        this.cities.push(&#123;label:'Rome', value:'Rome'&#125;);\\n        this.cities.push(&#123;label:'London', value:'London'&#125;);\\n        this.cities.push(&#123;label:'Istanbul', value:'Istanbul'&#125;);\\n        this.cities.push(&#123;label:'Paris', value:'Paris'&#125;);\\n    &#125;\\n\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Model Driven Forms</h3>\\n            <p>SelectButton can be used in a model driven form as well.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-selectButton [options]=\\\"cities\\\" formControlName=\\\"selectedCity\\\"&gt;&lt;/p-selectButton&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Type</th>\\n                        <th>Default</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>options</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>An array of selectitems to display as the available options.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>multiple</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When specified, allows selecting multiple values.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>tabindex</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Index of the element in tabbing order.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the element should be disabled.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Parameters</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onChange</td>\\n                            <td>event.originalEvent: browser event<br />\\n                                event.value: single value or an array of values that are selected\\n                            </td>\\n                            <td>Callback to invoke when value changes.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onOptionClick</td>\\n                            <td>event.originalEvent: browser event<br />\\n                                event.option: SelectItem instance of the clicked button<br />\\n                                event.index: Index of the clicked button\\n                            </td>\\n                            <td>Callback to invoke when a button is clicked.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/selectbutton\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Single&lt;/h3&gt;\\n&lt;p-selectButton [options]=\\\"types\\\" [(ngModel)]=\\\"selectedType\\\"&gt;&lt;/p-selectButton&gt;\\n\\n&lt;p&gt;Selected Type: {{selectedType}}&lt;/p&gt;\\n\\n&lt;h3&gt;Multiple&lt;/h3&gt;\\n&lt;p-selectButton [options]=\\\"types\\\" [(ngModel)]=\\\"selectedTypes\\\" multiple=\\\"multiple\\\"&gt;&lt;/p-selectButton&gt;\\n&lt;p&gt;Selected Types: &lt;span *ngFor=\\\"let type of selectedTypes\\\"&gt;{{type}} &lt;/span&gt;&lt;/p&gt;\\n\\n&lt;hr /&gt;\\n\\n&lt;button type=\\\"button\\\" (click)=\\\"clear()\\\" pButton icon=\\\"fa-close\\\" label=\\\"Clear\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class SelectButtonDemo &#123;\\n\\n    types: SelectItem[];\\n\\n    selectedType: string;\\n\\n    selectedTypes: string[] = ['Apartment','Studio'];\\n\\n    constructor() &#123;\\n        this.types = [];\\n        this.types.push(&#123;label: 'Apartment', value: 'Apartment'&#125;);\\n        this.types.push(&#123;label: 'House', value: 'House'&#125;);\\n        this.types.push(&#123;label: 'Studio', value: 'Studio'&#125;);\\n    &#125;\\n\\n    clear() &#123;\\n        this.selectedType = null;\\n        this.selectedTypes = [];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/selectbutton/selectbuttondemo.html\n// module id = ../../../../../src/app/showcase/components/selectbutton/selectbuttondemo.html\n// module chunks = selectbuttondemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule}    from '@angular/forms';\nimport {SelectButtonDemo} from './selectbuttondemo';\nimport {SelectButtonDemoRoutingModule} from './selectbuttondemo-routing.module';\nimport {SelectButtonModule} from '../../../components/selectbutton/selectbutton';\nimport {ButtonModule} from '../../../components/button/button';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSelectButtonDemoRoutingModule,\n        FormsModule,\n        SelectButtonModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tSelectButtonDemo\n\t]\n})\nexport class SelectButtonDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/selectbutton/selectbuttondemo.module.ts","import {Component} from '@angular/core';\nimport {SelectItem} from '../../../components/common/api';\n\n@Component({\n    templateUrl: './selectbuttondemo.html'\n})\nexport class SelectButtonDemo {\n\n    types: SelectItem[];\n\n    selectedType: string;\n\n    selectedTypes: string[] = ['Apartment','Studio'];\n\n    constructor() {\n        this.types = [];\n        this.types.push({label: 'Apartment', value: 'Apartment'});\n        this.types.push({label: 'House', value: 'House'});\n        this.types.push({label: 'Studio', value: 'Studio'});\n    }\n\n    clear() {\n        this.selectedType = null;\n        this.selectedTypes = [];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/selectbutton/selectbuttondemo.ts"],"sourceRoot":"webpack:///"}