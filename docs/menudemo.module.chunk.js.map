{"version":3,"sources":["/Users/kcjones-evans/work/primeng/src/app/showcase/components/menu/menudemo-routing.module.ts","/Users/kcjones-evans/work/primeng/src/app/showcase/components/menu/menudemo.html","/Users/kcjones-evans/work/primeng/src/app/showcase/components/menu/menudemo.module.ts","/Users/kcjones-evans/work/primeng/src/app/showcase/components/menu/menudemo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACC;AACR;AAYpC,IAAa,qBAAqB;IAAlC;IAAoC,CAAC;IAAD,4BAAC;AAAD,CAAC;AAAxB,qBAAqB;IAVjC,uEAAQ,CAAC;QACT,OAAO,EAAE;YACR,qEAAY,CAAC,QAAQ,CAAC;gBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,2DAAQ,EAAC;aAC7B,CAAC;SACF;QACD,OAAO,EAAE;YACR,qEAAY;SACZ;KACD,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;ACdlC,uzBAAuzB,yBAAyB,wBAAwB,gYAAgY,4BAA4B,IAAI,WAAW,kHAAkH,8BAA8B,yBAAyB,oDAAoD,mCAAmC,6BAA6B,wCAAwC,6BAA6B,uCAAuC,oBAAoB,YAAY,QAAQ,+NAA+N,8BAA8B,yBAAyB,8BAA8B,0EAA0E,mCAAmC,yBAAyB,wCAAwC,+BAA+B,iBAAiB,0EAA0E,uCAAuC,yBAAyB,sCAAsC,+BAA+B,EAAE,YAAY,QAAQ,4TAA4T,kDAAkD,IAAI,WAAW,MAAM,qGAAqG,IAAI,WAAW,44JAA44J,sBAAsB,SAAS,OAAO,MAAM,4BAA4B,IAAI,WAAW,QAAQ,MAAM,SAAS,OAAO,MAAM,kDAAkD,IAAI,WAAW,MAAM,qGAAqG,IAAI,WAAW,kHAAkH,8BAA8B,yBAAyB,8BAA8B,0EAA0E,mCAAmC,yBAAyB,wCAAwC,+BAA+B,iBAAiB,0EAA0E,uCAAuC,yBAAyB,sCAAsC,+BAA+B,EAAE,YAAY,QAAQ,mE;;;;;;;;;;;;;;;;;;;;;;;;ACAntR;AACE;AACT;AAC4B;AACR;AACO;AAAA,CAAC;AACE;AACwB;AAe1F,IAAa,cAAc;IAA3B;IAA6B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAjB,cAAc;IAb1B,uEAAQ,CAAC;QACT,OAAO,EAAE;YACR,qEAAY;YACZ,uFAAqB;YACf,yEAAU;YACV,+EAAY;YACZ,kFAAa;YACb,0GAAqB;SAC3B;QACD,YAAY,EAAE;YACb,2DAAQ;SACR;KACD,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;ACtBa;AAMxC,IAAa,QAAQ;IAArB;IAoBA;IAhBI,2BAAQ,GAAR;QACI,IAAI,CAAC,KAAK,GAAG,CAAC;gBACV,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE;oBACH,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,cAAO,CAAC,EAAC;oBAClD,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAC;iBACvC;aACJ;YACD;gBACI,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE;oBACH,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAC;oBACnC,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAC;iBACrC;aACJ,CAAC,CAAC;IACP,CAAC;IACL;AAAA;AApBa,QAAQ;IAHpB,wEAAS,CAAC;QACP,8FAA8B;KACjC,CAAC;GACW,QAAQ,CAoBrB;AApBqB","file":"menudemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {MenuDemo} from './menudemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: MenuDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class MenuDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/menu/menudemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">Menu</span>\\n        <span>Menu is a navigation/command component that supports dynamic and static positioning.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p-menu [model]=\\\"items\\\"></p-menu>\\n\\n    <h3>Popup</h3>\\n    <p-menu #menu popup=\\\"popup\\\" [model]=\\\"items\\\"></p-menu>\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"></button>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;MenuModule,MenuItem&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>MenuModel API</h3>\\n            <p>Menu uses the common menumodel api to define its items, visit <a [routerLink]=\\\"['/menumodel']\\\">MenuModel API</a> for details.</p>\\n\\n            <h3>Getting Started</h3>\\n            <p>Menu requires a collection of menuitems as its model.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-menu [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MenuDemo &#123;\\n    \\n    items: MenuItem[];\\n\\n    ngOnInit() &#123;\\n        this.items = [\\n                    &#123;label: 'New', icon: 'fa-plus'&#125;,\\n                    &#123;label: 'Open', icon: 'fa-download'&#125;,\\n                    &#123;label: 'Undo', icon: 'fa-refresh'&#125;\\n                ];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>SubMenus</h3>\\n            <p>Menu supports 1 level of nesting via subitems of an item.</p>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MenuDemo &#123;\\n    \\n    items: MenuItem[];\\n\\n    ngOnInit() &#123;\\n        this.items = [&#123;\\n            label: 'File',\\n            items: [\\n                &#123;label: 'New', icon: 'fa-plus'&#125;,\\n                &#123;label: 'Open', icon: 'fa-download'&#125;\\n            ]\\n        &#125;,\\n        &#123;\\n            label: 'Edit',\\n            items: [\\n                &#123;label: 'Undo', icon: 'fa-refresh'&#125;,\\n                &#123;label: 'Redo', icon: 'fa-repeat'&#125;\\n            ]\\n        &#125;];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n\\n            <h3>Popup Mode</h3>\\n            <p>Menu is inline by default, popup mode is also supported by enabling popup property and calling toggle method by passing the event \\n                    from the anchor element.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-menu #menu popup=\\\"popup\\\" [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n&lt;button type=\\\"button\\\" pButton icon=\\\"fa fa-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n       \\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Type</th>\\n                        <th>Default</th>\\n                        <th>Description</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>model</td>\\n                            <td>array</td>\\n                            <td>null</td>\\n                            <td>An array of menuitems.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>popup</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>Defines if menu would displayed as a popup.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the overlay, valid values are \\\"body\\\" or a local ng-template variable of another element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Methods</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>toggle</td>\\n                            <td>event: browser event</td>\\n                            <td>Toggles the visibility of the popup menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>show</td>\\n                            <td>event: browser event</td>\\n                            <td>Displays the popup menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>hide</td>\\n                            <td>-</td>\\n                            <td>Hides the popup menu.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-menu</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menu-list</td>\\n                            <td>List element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem</td>\\n                            <td>Menuitem element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem-text</td>\\n                            <td>Label of a menuitem.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menuitem-icon</td>\\n                            <td>Icon of a menuitem.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefacestree/master/src/app/showcase/components/menu\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p-menu [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n\\n&lt;h3&gt;Popup&lt;/h3&gt;\\n&lt;p-menu #menu popup=\\\"popup\\\" [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\n&lt;button type=\\\"button\\\" pButton icon=\\\"fa fa-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class MenuDemo &#123;\\n    \\n    items: MenuItem[];\\n\\n    ngOnInit() &#123;\\n        this.items = [&#123;\\n            label: 'File',\\n            items: [\\n                &#123;label: 'New', icon: 'fa-plus'&#125;,\\n                &#123;label: 'Open', icon: 'fa-download'&#125;\\n            ]\\n        &#125;,\\n        &#123;\\n            label: 'Edit',\\n            items: [\\n                &#123;label: 'Undo', icon: 'fa-refresh'&#125;,\\n                &#123;label: 'Redo', icon: 'fa-repeat'&#125;\\n            ]\\n        &#125;];\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/menu/menudemo.html\n// module id = ../../../../../src/app/showcase/components/menu/menudemo.html\n// module chunks = menudemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuDemo} from './menudemo';\nimport {MenuDemoRoutingModule} from './menudemo-routing.module';\nimport {MenuModule} from '../../../components/menu/menu'\nimport {ButtonModule} from '../../../components/button/button';;\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tMenuDemoRoutingModule,\n        MenuModule,\n        ButtonModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tMenuDemo\n\t]\n})\nexport class MenuDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/menu/menudemo.module.ts","import {Component} from '@angular/core';\nimport {MenuItem} from '../../../components/common/api';\n\n@Component({\n    templateUrl: './menudemo.html'\n})\nexport class MenuDemo {\n    \n    items: MenuItem[];\n\n    ngOnInit() {\n        this.items = [{\n            label: 'File',\n            items: [\n                {label: 'New', icon: 'fa-plus', command: () => {}},\n                {label: 'Open', icon: 'fa-download'}\n            ]\n        },\n        {\n            label: 'Edit',\n            items: [\n                {label: 'Undo', icon: 'fa-refresh'},\n                {label: 'Redo', icon: 'fa-repeat'}\n            ]\n        }];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/menu/menudemo.ts"],"sourceRoot":"webpack:///"}