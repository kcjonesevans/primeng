{"version":3,"sources":["/Users/kcjones-evans/work/primeng/src/app/components/overlaypanel/overlaypanel.ts","/Users/kcjones-evans/work/primeng/src/app/showcase/components/overlaypanel/overlaypaneldemo-routing.module.ts","/Users/kcjones-evans/work/primeng/src/app/showcase/components/overlaypanel/overlaypaneldemo.html","/Users/kcjones-evans/work/primeng/src/app/showcase/components/overlaypanel/overlaypaneldemo.module.ts","/Users/kcjones-evans/work/primeng/src/app/showcase/components/overlaypanel/overlaypaneldemo.ts"],"names":[],"mappings":"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","file":"overlaypaneldemo.module.chunk.js","sourcesContent":["import {NgModule,Component,Input,Output,OnInit,AfterViewInit,OnDestroy,EventEmitter,Renderer2,ElementRef,ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from '../dom/domhandler';\n\n@Component({\n    selector: 'p-overlayPanel',\n    template: `\n        <div [ngClass]=\"'ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow'\" [ngStyle]=\"style\" [class]=\"styleClass\"\n            [style.display]=\"visible ? 'block' : 'none'\" (click)=\"onPanelClick()\">\n            <div class=\"ui-overlaypanel-content\">\n                <ng-content></ng-content>\n            </div>\n            <a href=\"#\" *ngIf=\"showCloseIcon\" class=\"ui-overlaypanel-close ui-state-default\" (click)=\"onCloseClick($event)\">\n                <span class=\"fa fa-fw fa-close\"></span>\n            </a>\n        </div>\n    `,\n    providers: [DomHandler]\n})\nexport class OverlayPanel implements OnInit,AfterViewInit,OnDestroy {\n\n    @Input() dismissable: boolean = true;\n\n    @Input() showCloseIcon: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() appendTo: any;\n\n    @Output() onBeforeShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeHide: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterHide: EventEmitter<any> = new EventEmitter();\n    \n    container: any;\n\n    visible: boolean = false;\n\n    documentClickListener: any;\n    \n    selfClick: boolean;\n    \n    targetEvent: boolean;\n    \n    target: any;\n\n    constructor(public el: ElementRef, public domHandler: DomHandler, public renderer: Renderer2, private cd: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        if(this.dismissable) {\n            this.documentClickListener = this.renderer.listen('document', 'click', () => {\n                if(!this.selfClick&&!this.targetEvent) {\n                    this.hide();\n                }\n                this.selfClick = false;\n                this.targetEvent = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n    \n    ngAfterViewInit() {  \n        this.container = this.el.nativeElement.children[0]; \n        if(this.appendTo) {\n            if(this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                this.domHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n    \n    toggle(event,target?) {\n        let currentTarget = (target||event.currentTarget||event.target);\n                                \n        if(!this.target||this.target == currentTarget) {\n            if(this.visible)\n                this.hide();\n            else\n                this.show(event, target);\n        }\n        else {\n            this.show(event, target);\n        }\n        \n        if(this.dismissable) {\n            this.targetEvent = true;\n        }\n\n        this.target = currentTarget;\n    }\n\n    show(event,target?) {\n        if(this.dismissable) {\n            this.targetEvent = true;\n        }\n        \n        this.onBeforeShow.emit(null);\n        let elementTarget = target||event.currentTarget||event.target;\n        this.container.style.zIndex = ++DomHandler.zindex;\n\n        if(this.visible) {\n            this.domHandler.absolutePosition(this.container, elementTarget);\n        }\n        else {\n            this.visible = true;\n            this.domHandler.absolutePosition(this.container, elementTarget);\n            this.domHandler.fadeIn(this.container, 250);\n        }\n        this.onAfterShow.emit(null);\n    }\n\n    hide() {\n        if(this.visible) {\n            this.onBeforeHide.emit(null);\n            this.visible = false;\n            this.onAfterHide.emit(null);\n        }\n    }\n        \n    onPanelClick() {\n        if(this.dismissable) {\n            this.selfClick = true;\n        }\n    }\n\n    onCloseClick(event) {\n        this.hide();\n        \n        if(this.dismissable) {\n            this.selfClick = true;\n        }\n        \n        event.preventDefault();\n    }\n\n    ngOnDestroy() {\n        if(this.documentClickListener) {\n            this.documentClickListener();\n        }\n        \n        if(this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n        \n        this.target = null;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [OverlayPanel],\n    declarations: [OverlayPanel]\n})\nexport class OverlayPanelModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/components/overlaypanel/overlaypanel.ts","import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {OverlayPanelDemo} from './overlaypaneldemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: OverlayPanelDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class OverlayPanelDemoRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/overlaypanel/overlaypaneldemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">OverlayPanel</span>\\n        <span>OverlayPanel is a container component that can overlay other components on page.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p>Click the button to show the panel.</p>\\n    <button type=\\\"text\\\" pButton label=\\\"Basic\\\" (click)=\\\"op1.toggle($event)\\\"></button>\\n\\n    <p-overlayPanel #op1>\\n        <img src=\\\"assets/showcase/images/demo/galleria/galleria1.jpg\\\" alt=\\\"Galleria 1\\\" />\\n    </p-overlayPanel>\\n    \\n    <h3>Customized</h3>\\n    <p>This OverlayPanel gets displayed on hover of the icon, is not dismissable and displays a close icon.</p>\\n    <i class=\\\"fa fa-search\\\" (mouseenter)=\\\"op2.show($event)\\\" style=\\\"font-size:24px\\\"></i>\\n    \\n    <p-overlayPanel #op2 [showCloseIcon]=\\\"true\\\" [dismissable]=\\\"false\\\">\\n        <p-dataTable [value]=\\\"cars1\\\" [style]=\\\"&#123;'width':'500px'&#125;\\\">\\n            <p-column field=\\\"vin\\\" header=\\\"Vin\\\" [sortable]=\\\"true\\\"></p-column>\\n            <p-column field=\\\"year\\\" header=\\\"Year\\\" [sortable]=\\\"true\\\"></p-column>\\n            <p-column field=\\\"brand\\\" header=\\\"Brand\\\" [sortable]=\\\"true\\\"></p-column>\\n            <p-column field=\\\"color\\\" header=\\\"Color\\\" [sortable]=\\\"true\\\"></p-column>\\n        </p-dataTable>\\n    </p-overlayPanel>\\n    \\n    <h3>DataTable Integration</h3>\\n    <p-dataTable [value]=\\\"cars2\\\">\\n        <p-column [style]=\\\"&#123;'width':'10%','text-align':'center'&#125;\\\" header=\\\"Logo\\\">\\n            <ng-template let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <button type=\\\"button\\\" pButton (click)=\\\"selectCar($event,car,op3);\\\" icon=\\\"fa-search\\\"></button>\\n            </ng-template>\\n        </p-column>\\n        <p-column field=\\\"vin\\\" header=\\\"Vin\\\"></p-column>\\n        <p-column field=\\\"year\\\" header=\\\"Year\\\"></p-column>\\n        <p-column field=\\\"brand\\\" header=\\\"Brand\\\"></p-column>\\n        <p-column field=\\\"color\\\" header=\\\"Color\\\"></p-column>\\n    </p-dataTable>\\n    \\n    <p-overlayPanel #op3>\\n        <img src=\\\"assets/showcase/images/demo/car/{{selectedCar.brand}}.png\\\" *ngIf=\\\"selectedCar\\\"/>\\n    </p-overlayPanel>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n            <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;OverlayPanelModule&#125; from 'primeng/primeng';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>OverlayPanel is defined using p-overlayPanel element and is displayed using the <i>show</i> or <i>toggle</i> method of a local ng-template variable.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-overlayPanel #op&gt;\\n    Content\\n&lt;/p-overlayPanel&gt;\\n\\n&lt;button type=\\\"text\\\" pButton label=\\\"Basic\\\" (click)=\\\"op.toggle($event)\\\"&gt;&lt;/button&gt;\\n</code>\\n</pre>\\n            <h3>Show and Hide</h3>\\n            <p><i>show</i> method takes two parameters, first one is the event and it is mandatory. By default the target component to align the overlay is the event target, \\n            if you'd like to align it to another element, provide it as the second parameter. Similarly calling <i>hide()</i> hides the overlay panel and the <i>toggle</i> method \\n            toggles the visibility of the panel. In example below, clicking the button displays the overlayPanel aligned to the actualTarget div, not the button itself.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-overlayPanel #op&gt;\\n    Content\\n&lt;/p-overlayPanel&gt;\\n\\n&lt;button type=\\\"text\\\" pButton label=\\\"Custom Target\\\" (click)=\\\"op.show($event, actualTarget)\\\"&gt;&lt;/button&gt;\\n&lt;div #actualTarget&gt;&lt;/div&gt;\\n</code>\\n</pre>\\n        \\n        \\n            <h3>Dismissable and CloseIcon</h3>\\n            <p>Clicking outside the overlay hides the panel, setting dismissable to false disables this behavior. Additionally enablign showCloseIcon property \\n            displays a close icon at the top right corner to close the panel</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-overlayPanel #op [dismissable]=\\\"true\\\" [showCloseIcon]=\\\"true\\\"&gt;\\n    Content\\n&lt;/p-overlayPanel&gt;\\n</code>\\n</pre>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>dismissable</td>\\n                            <td>boolean</td>\\n                            <td>true</td>\\n                            <td>Enables to hide the overlay when outside is clicked.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showCloseIcon</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When enabled, displays a close icon at top right corner.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the panel, valid values are \\\"body\\\" or a local ng-template variable of another element.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onBeforeShow</td>\\n                            <td>-</td>\\n                            <td>Callback to invoke before overlay is shown.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onAfterShow</td>\\n                            <td>-</td>\\n                            <td>Callback to invoke after overlay is shown.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onBeforeHide</td>\\n                            <td>-</td>\\n                            <td>Callback to invoke before overlay is hidden.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onAfterHide</td>\\n                            <td>-</td>\\n                            <td>Callback to invoke after overlay is hidden.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Methods</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>toggle</td>\\n                            <td>event: browser event <br>\\n                                target?: target element to align the panel, defaults to event.target\\n                            </td>\\n                            <td>Toggles the visibility of the panel.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>show</td>\\n                            <td>event: browser event <br>\\n                                target?: target element to align the panel to\\n                            </td>\\n                            <td>Displays the panel.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>hide</td>\\n                            <td>-</td>\\n                            <td>Hides the panel.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            \\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-overlaypanel</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-overlaypanel-content</td>\\n                            <td>Content of the panel.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-overlaypanel-close</td>\\n                            <td>Close icon.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefacestree/master/src/app/showcase/components/overlaypanel\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p&gt;Click the button to show the panel.&lt;/p&gt;\\n&lt;button type=\\\"text\\\" pButton label=\\\"Basic\\\" (click)=\\\"op1.toggle($event)\\\"&gt;&lt;/button&gt;\\n\\n&lt;p-overlayPanel #op1&gt;\\n    &lt;img src=\\\"assets/showcase/images/demo/galleria/galleria1.jpg\\\" alt=\\\"Galleria 1\\\" /&gt;\\n&lt;/p-overlayPanel&gt;\\n\\n&lt;h3&gt;Customized&lt;/h3&gt;\\n&lt;p&gt;This OverlayPanel gets displayed on hover of the icon, is not dismissable and displays a close icon.&lt;/p&gt;\\n&lt;i class=\\\"fa fa-search\\\" (mouseenter)=\\\"op2.show($event)\\\" style=\\\"font-size:24px\\\"&gt;&lt;/i&gt;\\n\\n&lt;p-overlayPanel #op2 [showCloseIcon]=\\\"true\\\" [dismissable]=\\\"false\\\"&gt;\\n    &lt;p-dataTable [value]=\\\"cars1\\\" [style]=\\\"&#123;'width':'500px'&#125;\\\"&gt;\\n        &lt;p-column field=\\\"vin\\\" header=\\\"Vin\\\" [sortable]=\\\"true\\\"&gt;&lt;/p-column&gt;\\n        &lt;p-column field=\\\"year\\\" header=\\\"Year\\\" [sortable]=\\\"true\\\"&gt;&lt;/p-column&gt;\\n        &lt;p-column field=\\\"brand\\\" header=\\\"Brand\\\" [sortable]=\\\"true\\\"&gt;&lt;/p-column&gt;\\n        &lt;p-column field=\\\"color\\\" header=\\\"Color\\\" [sortable]=\\\"true\\\"&gt;&lt;/p-column&gt;\\n    &lt;/p-dataTable&gt;\\n&lt;/p-overlayPanel&gt;\\n\\n&lt;h3&gt;DataTable Integration&lt;/h3&gt;\\n&lt;p-dataTable [value]=\\\"cars2\\\"&gt;\\n    &lt;p-column [style]=\\\"&#123;'width':'10%','text-align':'center'&#125;\\\" header=\\\"Logo\\\"&gt;\\n        &lt;ng-template let-car=\\\"rowData\\\" pTemplate=\\\"body\\\"&gt;\\n            &lt;button type=\\\"button\\\" pButton (click)=\\\"selectCar($event,car,op3);\\\" icon=\\\"fa-search\\\"&gt;&lt;/button&gt;\\n        &lt;/ng-template&gt;\\n    &lt;/p-column&gt;\\n    &lt;p-column field=\\\"vin\\\" header=\\\"Vin\\\"&gt;&lt;/p-column&gt;\\n    &lt;p-column field=\\\"year\\\" header=\\\"Year\\\"&gt;&lt;/p-column&gt;\\n    &lt;p-column field=\\\"brand\\\" header=\\\"Brand\\\"&gt;&lt;/p-column&gt;\\n    &lt;p-column field=\\\"color\\\" header=\\\"Color\\\"&gt;&lt;/p-column&gt;\\n&lt;/p-dataTable&gt;\\n\\n&lt;p-overlayPanel #op3&gt;\\n    &lt;img src=\\\"assets/showcase/images/demo/car/{{selectedCar.brand}}.png\\\" *ngIf=\\\"selectedCar\\\"/&gt;\\n&lt;/p-overlayPanel&gt;\\n</code>\\n</pre>\\n\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class OverlayPanelDemo &#123;\\n\\n    cars1: Car[];\\n    \\n    cars2: Car[];\\n    \\n    selectedCar: Car;\\n    \\n    constructor(private carService: CarService) &#123; &#125;\\n\\n    ngOnInit() &#123;\\n        this.carService.getCarsSmall().then(cars => this.cars1 = cars);\\n        this.carService.getCarsSmall().then(cars => this.cars2 = cars);\\n    &#125;\\n    \\n    selectCar(event,car: Car, overlaypanel: OverlayPanel) &#123;\\n        this.selectedCar = car;\\n        overlaypanel.toggle(event);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n    </p-tabView>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/overlaypanel/overlaypaneldemo.html\n// module id = ../../../../../src/app/showcase/components/overlaypanel/overlaypaneldemo.html\n// module chunks = overlaypaneldemo.module","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayPanelDemo} from './overlaypaneldemo';\nimport {OverlayPanelDemoRoutingModule} from './overlaypaneldemo-routing.module';\nimport {OverlayPanelModule} from '../../../components/overlaypanel/overlaypanel';\nimport {ButtonModule} from '../../../components/button/button';\nimport {DataTableModule} from '../../../components/datatable/datatable';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tOverlayPanelDemoRoutingModule,\n        OverlayPanelModule,\n        ButtonModule,\n        DataTableModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tOverlayPanelDemo\n\t]\n})\nexport class OverlayPanelDemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/overlaypanel/overlaypaneldemo.module.ts","import {Component} from '@angular/core';\nimport {OverlayPanel} from '../../../components/overlaypanel/overlaypanel';\nimport {Car} from '../../components/domain/car';\nimport {CarService} from '../../service/carservice';\n\n@Component({\n    templateUrl: './overlaypaneldemo.html'\n})\nexport class OverlayPanelDemo {\n\n    cars1: Car[];\n    \n    cars2: Car[];\n    \n    selectedCar: Car;\n    \n    constructor(private carService: CarService) { }\n\n    ngOnInit() {\n        this.carService.getCarsSmall().then(cars => this.cars1 = cars);\n        this.carService.getCarsSmall().then(cars => this.cars2 = cars);\n    }\n    \n    selectCar(event,car: Car, overlaypanel: OverlayPanel) {\n        this.selectedCar = car;\n        overlaypanel.toggle(event);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/kcjones-evans/work/primeng/src/app/showcase/components/overlaypanel/overlaypaneldemo.ts"],"sourceRoot":"webpack:///"}